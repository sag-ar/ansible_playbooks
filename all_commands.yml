---
- name: intsalling packages
  hosts: all
  become: true
  gather_facts: no
  tasks:
  - name: installing packages
    ansible.builtin.yum:
      name: httpd
      state: latest
      
  - name: starting httpd services
    ansible.builtin.service:
      name: httpd
      state: started
      
  - name: Copy file to remote machine
    ansible.builtin.copy:
      src: /home/ansadmin/playboks/index.html 
      dest: /home/ansadmin/var/www/html/
      
      
  #creating a file  
  - name: create a file
    file:
      path: /opt/testfile
      state: touch
      mode: 0755
      owner: ansadmin
  
  - name: create a directory
    file:
      path: /opt/dir1
      state: directory
      mode: 0755
      owner: ansadmin

  - name: delete a file/directory
     file:
       path: /opt/dir1
       state: absent

  
  - name: install multiple packages
    ansible.builtin.yum:
      name: "{{ item }}"
      state: installed
    with_items:
      - git
      - wget
      - tree
      - make
      - telnet
      - gzip
  - name: uninstall multiple packages
    ansible.builtin.yum:
      name: "{{ item }}"
      state: absent
    with_items:
      - git
      - wget
      - tree
      - make
      - telnet
  #array
  - name: install multiple packages
    ansible.builtin.yum:
      name: ['tree', 'wget', 'make']
      state: installed

  - name: unintsall package
    ansible.builtin.yum:
      name: ['wget', 'tree', 'make']
      state: absent
  
  #loop
  - name: unintsall_install_package
    ansible.builtin.yum:
      name: "{{ item.package }}"
      state: "{{ item.setup }}"
    loop:
      - { package: 'git', setup: 'installed' }
      - { package: 'git', setup: 'absent' }
  
  #conditions
  - name: intsall httpd on ubuntu
    ansible.builtin.apt:
      name: apache2
      update_cache: yes 
      state: latest
    when: ansible_os_family == "Debian"
  
  - name: starting httpd on ubuntu
    ansible.builtin.service:
      name: apache2
      state: started
    when: ansible_os_family == "Debian"
   
  #notify and hendler
  - name: installing packages
    ansible.builtin.yum:
      name: httpd
      state: latest
    notify: start httpd services

  - name: Copy file to remote machine
    ansible.builtin.copy:
      src: /home/ansadmin/playboks/index.html
      dest: /home/ansadmin/var/www/html/

  handlers:
  - name: start httpd services
    ansible.builtin.service:
      name: httpd
      state: started

      
 #ansible-playbook create_user_external_file.yml --extra-vars "user_name=priyanka" --check 
